@page "/Venue"
@rendermode InteractiveServer

@using GamsIRep.IRepositry;
@using System.Text.RegularExpressions
@using global::Games.Domain.Entity

<h3>Venues</h3>

<button class="btn btn-primary" @onclick="ShowAddModal">Add New Venues</button>
<div class="mb-3">
    <label for="search" class="form-label">Search</label>
    <input @bind="searchItem" class="form-control" placeholder="Search. . ." style="max-width:250px" id="search" />
    <button @onclick="SarchVenue" class="form-control" style="max-width:250px"> Search  </button>
</div>
<br />


<br />
<br />


@if (venues == null)
{
    <span>Loading...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Location</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var venue in venues)
            {
                <tr>
                    <td>@venue.Id</td>
                    <td>@venue.Name</td>
                    <td>@venue.Location</td>
                    
                    <td>
                        <button class="btn btn-secondary" @onclick="() => ShowEditModal(venue)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteVenue(venue)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<AddEditVenueModal @ref="addEditVenueModal" OnSave="RefreshList" />
  @* <div style="width:200px">
    <SarchVenue @ref="sarchVenue" OnSearch="SarchVenue"></SarchVenue>
</div>   *@
@code {
    [Inject] IVenueRep VenueService { get; set; }

    private List<Venue> venues;

    private AddEditVenueModal addEditVenueModal;
    public SarchVenue sarchVenue;
    private string searchItem;


    protected override async Task OnInitializedAsync()
    {
        await LoadVenue();
    }

    private async Task LoadVenue()
    {

        venues = await VenueService.GetAll();

    }

    private async Task SarchVenue()
    {
        venues = await VenueService.Sarche(searchItem);
    }

    private void ShowSearchModal ()
    {
        
    }

    private void ShowAddModal()
    {
        addEditVenueModal.Show(new Venue());
    }

    private void ShowEditModal(Venue venue)
    {
        addEditVenueModal.Show(venue);
    }

    private void DeleteVenue(Venue venue)
    {
        VenueService.Delete(venue);
        LoadVenue();
    }

    private void RefreshList()
    {
        LoadVenue();
    }
}